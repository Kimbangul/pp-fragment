/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/debounce@2.1.0/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function debounce(e, t = 100, o = {}) {
  if ('function' != typeof e)
    throw new TypeError(
      `Expected the first parameter to be a function, got \`${typeof e}\`.`
    );
  if (t < 0) throw new RangeError('`wait` must not be negative.');
  const { immediate: n } = 'boolean' == typeof o ? { immediate: o } : o;
  let r, i, c, u, d;
  function a() {
    const t = r,
      o = i;
    return (r = void 0), (i = void 0), (d = e.apply(t, o)), d;
  }
  function f() {
    const e = Date.now() - u;
    e < t && e >= 0
      ? (c = setTimeout(f, t - e))
      : ((c = void 0), n || (d = a()));
  }
  const s = function (...e) {
    if (r && this !== r)
      throw new Error('Debounced method called with different contexts.');
    (r = this), (i = e), (u = Date.now());
    const o = n && !c;
    return c || (c = setTimeout(f, t)), o && (d = a()), d;
  };
  return (
    (s.clear = () => {
      c && (clearTimeout(c), (c = void 0));
    }),
    (s.flush = () => {
      c && s.trigger();
    }),
    (s.trigger = () => {
      (d = a()), s.clear();
    }),
    s
  );
}
(module.exports.debounce = debounce), (module.exports = debounce);
//# sourceMappingURL=/sm/aca4649205735b6d503045238a6c21f819a33deb50d69485f79bf8674a7055bd.map
